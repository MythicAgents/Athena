<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net8.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<Configurations>
			Debug;
			Release;
			LocalDebug;
			LocalDebugHttp;
			LocalDebugWebsocket;
			LocalDebugDiscord;
			LocalDebugGithub;
			LocalDebugSmb
		</Configurations>
	</PropertyGroup>
		
	<!-- Default NuGet packages -->
	<ItemGroup>
		<PackageReference Include="Autofac" Version="8.1.1" />
		<PackageReference Include="Autofac.Extensions.DependencyInjection" Version="10.0.0" />
		<PackageReference Include="Obfuscar" Version="2.2.40">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<!-- Default Usings -->
	<ItemGroup>
		<ProjectReference Include="..\Agent.Managers.Python\Agent.Managers.Python.csproj" />
		<ProjectReference Include="..\Agent.Managers.Reflection\Agent.Managers.Reflection.csproj" />
		<ProjectReference Include="..\Agent.Models\Agent.Models.csproj" />
		<ProjectReference Condition="'$(HandlerOS)' == 'windows'" Include="..\Agent.Managers.Windows\Agent.Managers.Windows.csproj" />
		<ProjectReference Condition="'$(HandlerOS)' == 'macos' Or '$(HandlerOS)' == 'windows' Or '$(HandlerOS)' == 'redhat'" Include="..\Agent.Managers.Linux\Agent.Managers.Linux.csproj" />
	</ItemGroup>

	<!-- Build a Windows Service -->
	<ItemGroup Condition="'$(WindowsService)' == 'True'">
		<PackageReference Include="Microsoft.Extensions.Hosting" Version="7.0.0" />
		<PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="7.0.0" />
		<PackageReference Include="Microsoft.Extensions.Logging.Console" Version="7.0.0" />
	</ItemGroup>
	<PropertyGroup Condition="'$(WindowsService)'=='True'">
		<DefineConstants>WINDOWS_SERVICE</DefineConstants>
	</PropertyGroup>

	<!-- Set debug references for running in VS-->
	<PropertyGroup Condition="$(Configuration.StartsWith('LocalDebug'))">
		<DefineConstants>CHECKYMANDERDEV</DefineConstants>
		<ModifiedConfiguration>$([System.String]::Copy($(Configuration)).Replace('LocalDebug', ''))</ModifiedConfiguration>
		<IsWindows Condition="'$(OS)' == 'Windows_NT'">true</IsWindows>
		<IsLinux Condition="'$(OS)' != 'Windows_NT'">true</IsLinux>
	</PropertyGroup>
	<ItemGroup Condition="$(Configuration.StartsWith('LocalDebug'))">
		<ProjectReference Include="..\Agent.Profiles.$(ModifiedConfiguration)\Agent.Profiles.$(ModifiedConfiguration).csproj" Condition="'$(Configuration)' != ''" />
		<ProjectReference Include="..\Agent.Crypto.Aes\Agent.Crypto.Aes.csproj" />
		<ProjectReference Include="..\**\*.csproj" Exclude="..\**\Agent*.csproj;..\**\AthenaCore.csproj" />
		<ProjectReference Include="..\Agent.Managers.Windows\Agent.Managers.Windows.csproj" Condition="'$(IsWindows)' == 'true'"/>
		<ProjectReference Include="..\Agent.Managers.Linux\Agent.Managers.Linux.csproj" Condition="'$(IsLinux)' == 'false'"/>
	</ItemGroup>
	

	<!-- Set References for testing -->
	<ItemGroup Condition="'$(ThreatCheck)' == 'True' Or '$(WindowsTest)' == 'True'">
		<ProjectReference Include="..\**\*.csproj" Exclude="..\**\Agent*.csproj;..\**\AthenaCore.csproj" />
		<ProjectReference Include="..\Agent.Profiles.Websocket\Agent.Profiles.Websocket.csproj" />
		<ProjectReference Include="..\Agent.Crypto.Aes\Agent.Crypto.Aes.csproj" />
		<ProjectReference Include="..\Agent.Managers.Windows\Agent.Managers.Windows.csproj" />
	</ItemGroup>
	<ItemGroup Condition="'$(LinuxTest)' == 'True' Or '$(MacTest)' == 'True'">
		<ProjectReference Include="..\**\*.csproj" Exclude="..\**\Agent*.csproj;..\**\AthenaCore.csproj" />
		<ProjectReference Include="..\Agent.Crypto.Aes\Agent.Crypto.Aes.csproj" />
		<ProjectReference Include="..\Agent.Managers.Linux\Agent.Managers.Linux.csproj" />
		<ProjectReference Include="..\Agent.Profiles.Http\Agent.Profiles.Http.csproj" />
	</ItemGroup>
	
	<!-- Assembly Name Obfuscation -->
	<PropertyGroup Condition="'$(RandomName)' != ''">
		<AssemblyName>$(RandomName)</AssemblyName>
	</PropertyGroup>
	
	<!-- Obfuscation Replacement Placeholder Do Not Remove -->
	
	<ItemGroup>
		<TrimmerRootDescriptor Include="Roots.xml" />
	</ItemGroup>
</Project>
