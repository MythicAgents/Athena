name: Agent Builds

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        configuration: [Release]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.404

    - name: Build Agent Linux
      if: matrix.os == 'ubuntu-latest'
      run: dotnet publish Payload_Type/athena/athena/agent_code/Agent.sln -c Release --nologo -v q --property WarningLevel=0 /clp:ErrorsOnly -r linux-x64 /p:LinuxTest=True
    
    - name: Build Agent MacOS
      if: matrix.os == 'macos-latest'
      run: dotnet publish Payload_Type/athena/athena/agent_code/Agent.sln -c Release --nologo -v q --property WarningLevel=0 /clp:ErrorsOnly -r osx-x64 /p:MacTest=True
    
    - name: Build Agent Windows
      if: matrix.os == 'windows-latest'
      run: dotnet publish Payload_Type\athena\athena\agent_code\Agent.sln -c Release --nologo -v q --property WarningLevel=0 /clp:ErrorsOnly -r win-x64 /p:WindowsTest=True

    - name: Test Agent Linux
      if: matrix.os == 'ubuntu-latest'
      run: dotnet test Payload_Type/athena/athena/agent_code/Tests/Agent.Tests/ -c Debug --nologo -v q /clp:ErrorsOnly /p:LinuxTest=True /p:SolutionDir=""
    
    - name: Test Agent MacOS
      if: matrix.os == 'macos-latest'
      run: dotnet test Payload_Type/athena/athena/agent_code/Tests/Agent.Tests/ -c Debug --nologo -v q /clp:ErrorsOnly /p:MacTest=True /p:SolutionDir=""
    
    - name: Test Agent Windows
      if: matrix.os == 'windows-latest'
      run: dotnet test Payload_Type\athena\athena\agent_code\Tests\Agent.Tests\ -c Debug --nologo -v q /clp:ErrorsOnly /p:WindowsTest=True /p:SolutionDir=""

