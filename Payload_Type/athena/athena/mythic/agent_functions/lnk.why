from mythic_container.MythicCommandBase import *
import json
from mythic_container.MythicRPC import *
from .athena_utils import message_converter


class LnkArguments(TaskArguments):
    def __init__(self, command_line, **kwargs):
        super().__init__(command_line, **kwargs)
        self.args = [
            CommandParameter(
                name="action",
                type=ParameterType.String,
                description="Action to perform, add or update",
                parameter_group_info=[ParameterGroupInfo(
                    required=True,
                    ui_position=0
                    )
                ],
            ),
            CommandParameter(
                name="path",
                type=ParameterType.String,
                description="The path to the shortcut to add or update",
                parameter_group_info=[ParameterGroupInfo(
                    required=True,
                    ui_position=1
                    )
                ],
            ),
            CommandParameter(
                name="targetPath",
                type=ParameterType.String,
                description="The target path to set the lnk to.",
                parameter_group_info=[ParameterGroupInfo(
                    required=False,
                    ui_position=2
                    )
                ],
            ),
            CommandParameter(
                name="description",
                type=ParameterType.String,
                description="The description for the lnk.",
                parameter_group_info=[ParameterGroupInfo(
                    required=False,
                    ui_position=3
                    )
                ],
            ),
            CommandParameter(
                name="workingDir",
                type=ParameterType.String,
                description="The working dir for the lnk.",
                parameter_group_info=[ParameterGroupInfo(
                    required=False,
                    ui_position=4
                    )
                ],
            ),
        ]

    async def parse_arguments(self):
        if len(self.command_line) > 0:
            if self.command_line[0] == "{":
                self.load_args_from_json_string(self.command_line)


class LnkCommand(CommandBase):
    cmd = "lnk"
    needs_admin = False
    help_cmd = "lnk"
    description = "Manipulate lnk files"
    version = 1
    author = "@checkymander"
    argument_class = LnkArguments
    attackmapping = ["T1029"]
    attributes = CommandAttributes(
        load_only=False,
        builtin=False
    )

    async def create_go_tasking(self, taskData: PTTaskMessageAllData) -> PTTaskCreateTaskingMessageResponse:
        response = PTTaskCreateTaskingMessageResponse(
            TaskID=taskData.Task.ID,
            Success=True,
        )
        return response

    async def process_response(self, task: PTTaskMessageAllData, response: any) -> PTTaskProcessResponseMessageResponse:
        pass